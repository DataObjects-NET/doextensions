<?xml version="1.0" encoding="utf-8"?>
<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003"
         ToolsVersion="4.0" DefaultTargets="Build">

<Import Project="MSBuild\Tasks.targets" />
<Import Project="Version.props" />

<PropertyGroup>
  <Configuration Condition="'$(Configuration)'==''">Release</Configuration>
</PropertyGroup>

<PropertyGroup>
  <Modifier Condition="'$(Modifier)'=='Final'"></Modifier>
  <VersionName>$(Version)</VersionName>
  <VersionName Condition="'$(Modifier)'!=''">$(Version) $(Modifier)</VersionName>
  <!--<VersionNameZip>$(VersionName.Replace(' ', '_'))</VersionNameZip>-->
  <VersionNameNuGet>$(VersionName.Replace(' ', '-'))</VersionNameNuGet>
  <VersionMajor>$([System.Version]::new($(Version)).Major)</VersionMajor>
  <VersionMinor>$([System.Version]::new($(Version)).Minor)</VersionMinor>
  <VersionPatch>$([System.Version]::new($(Version)).Build)</VersionPatch>
</PropertyGroup>

<PropertyGroup>
  <LocalNugetStoragePath>$(DO_PACKAGE_STORE)</LocalNugetStoragePath>
</PropertyGroup>

<PropertyGroup>
  <BuildDir>$(MSBuildProjectDirectory)\_Build\</BuildDir>
  <SourcesDir>$(MSBuildProjectDirectory)\Sources\</SourcesDir>
  <BinariesDir>$(BuildDir)Binaries\$(Configuration)\</BinariesDir>
  <PackagesDir>$(BuildDir)Packages\</PackagesDir>
  <!--<ZipDir>$(BuildDir)Zip\</ZipDir>-->
</PropertyGroup>

<ItemGroup>
  <SpecFiles Include="$(SourcesDir)*\*.nuspec" />
</ItemGroup>

<ItemGroup>
  <Projects Include="$(SourcesDir)Extensions.sln">
    <Properties>Configuration=$(Configuration)</Properties>
  </Projects>
</ItemGroup>

<ItemGroup>
  <ProductVariables Include="Version2">
    <ReplacementValue>$(VersionMajor).$(VersionMinor)</ReplacementValue>
  </ProductVariables>
  <ProductVariables Include="Version3">
    <ReplacementValue>$(VersionMajor).$(VersionMinor).$(VersionPatch)</ReplacementValue>
  </ProductVariables>
  <ProductVariables Include="VersionName">
    <ReplacementValue>$(VersionName)</ReplacementValue>
  </ProductVariables>
</ItemGroup>

<ItemGroup>
  <Libraries Include="$(BinariesDir)Xtensive.Orm.Web.dll" />
  <Libraries Include="$(BinariesDir)Xtensive.Orm.Web.xml" />
  <Libraries Include="$(BinariesDir)Xtensive.Orm.Web.txt" />
  
  <Libraries Include="$(BinariesDir)Xtensive.Orm.BulkOperations.dll" />
  <Libraries Include="$(BinariesDir)Xtensive.Orm.BulkOperations.xml" />
  <Libraries Include="$(BinariesDir)Xtensive.Orm.BulkOperations.txt" />
  
  <Libraries Include="$(BinariesDir)Xtensive.Orm.Localization.dll" />
  <Libraries Include="$(BinariesDir)Xtensive.Orm.Localization.xml" />
  <Libraries Include="$(BinariesDir)Xtensive.Orm.Localization.txt" />
  
  <Libraries Include="$(BinariesDir)Xtensive.Orm.Reprocessing.dll" />
  <Libraries Include="$(BinariesDir)Xtensive.Orm.Reprocessing.xml" />
  <Libraries Include="$(BinariesDir)Xtensive.Orm.Reprocessing.txt" />

  <Libraries Include="$(BinariesDir)Xtensive.Orm.Security.dll" />
  <Libraries Include="$(BinariesDir)Xtensive.Orm.Security.xml" />
  <Libraries Include="$(BinariesDir)Xtensive.Orm.Security.txt" />

  <Libraries Include="$(BinariesDir)Xtensive.Orm.Tracking.dll" />
  <Libraries Include="$(BinariesDir)Xtensive.Orm.Tracking.xml" />
  <Libraries Include="$(BinariesDir)Xtensive.Orm.Tracking.txt" />

  <Libraries Include="$(BinariesDir)Xtensive.Orm.Logging.NLog.dll" />
  <Libraries Include="$(BinariesDir)Xtensive.Orm.Logging.NLog.xml" />
  <Libraries Include="$(BinariesDir)Xtensive.Orm.Logging.NLog.txt" />

  <Libraries Include="$(BinariesDir)Xtensive.Orm.Logging.log4net.dll" />
  <Libraries Include="$(BinariesDir)Xtensive.Orm.Logging.log4net.xml" />
  <Libraries Include="$(BinariesDir)Xtensive.Orm.Logging.log4net.txt" />
</ItemGroup>

<Target Name="InitBuildDir">
  <MakeDir Directories="$(BuildDir)" />
</Target>

<Target Name="UpdateProductInfo" DependsOnTargets="InitBuildDir">
  <PropertyGroup>
    <ProductInfoWorkFile>$(BuildDir)ProductInfo.cs.generated</ProductInfoWorkFile>
    <CompareCommand>fc "$(BuildDir)ProductInfo.cs" "$(ProductInfoWorkFile)" >nul 2>nul</CompareCommand>
  </PropertyGroup>
  <TemplateFile
    Template="$(SourcesDir)ProductInfo.cs"
    OutputFilename="$(ProductInfoWorkFile)"
    Tokens="@(ProductVariables)" />
  <Exec Command="$(CompareCommand)" IgnoreExitCode="true">
    <Output TaskParameter="ExitCode" PropertyName="CompareResult" />
  </Exec>
  <Copy
    Condition="'$(CompareResult)'!='0'"
    SourceFiles="$(ProductInfoWorkFile)"
    DestinationFiles="$(BuildDir)ProductInfo.cs" />
</Target>

<!-- 
  Ensures that local package storage is introduced
-->
<Target Name="EnsureLocalStorageIntroduced">
  <!--
  <MSBuild Projects="Lib\GetLib.proj" Properties="LibName=DataObjects.Net;LibVersion=$(DOVersion)" />
  -->
  <PropertyGroup>
    <LocalNugetStoragePath>$(DO_PACKAGE_STORE)</LocalNugetStoragePath>
    <AddSourceCommand>nuget sources add -Name "LocalNugetStorage" -source "$(LocalNugetStoragePath)"</AddSourceCommand>
  </PropertyGroup>
  
  <Error Condition="'$(LocalNugetStoragePath)'==''" Text = "Local Nuget packages storage is not declared." />
  <Exec Command="$(AddSourceCommand)" IgnoreExitCode="true" />
</Target>

<!-- NuGet packaging -->

<Target Name="InitPackagesDir" DependsOnTargets="CleanPackages">
  <MakeDir Directories="$(PackagesDir)" />
</Target>

<Target Name="BuildPackages"
        Condition="'$(Configuration)'=='Release'"
        DependsOnTargets="InitPackagesDir;BuildBinaries"
        Inputs="@(SpecFiles)" Outputs="%(Identity).Fake">
  <PropertyGroup>
    <ProjectFile>%(SpecFiles.RootDir)%(SpecFiles.Directory)%(SpecFiles.Filename).csproj</ProjectFile>
    <BuildCommand>nuget pack "$(ProjectFile)" -version $(VersionNameNuGet) -p Configuration=Release -o "$(PackagesDir)." -symbols</BuildCommand>
  </PropertyGroup>
  <Exec Command="$(BuildCommand)" />
</Target>

<Target Name="CleanPackages">
  <RemoveDir Directories="$(PackagesDir)" />
</Target>

<!-- Zip packaging -->

<!--
<Target Name="InitZipDir" DependsOnTargets="CleanZip">
  <MakeDir Directories="$(ZipDir)" />
</Target>

<Target Name="CopyDocumentation" Inputs="@(SpecFiles)" Outputs="%(Identity).Fake">
  <PropertyGroup>
    <SourceFile>%(SpecFiles.RootDir)%(SpecFiles.Directory)Readme.txt</SourceFile>
    <TargetFile>$(BinariesDir)%(SpecFiles.Filename).txt</TargetFile>
  </PropertyGroup>
  <Copy SourceFiles="$(SourceFile)" DestinationFiles="$(TargetFile)" SkipUnchangedFiles="true" />
</Target>

<Target Name="BuildZip"
        Condition="'$(Configuration)'=='Release'"
        DependsOnTargets="InitZipDir;BuildBinaries;CopyDocumentation">
  <PropertyGroup>
    <ZipFile>$(ZipDir)DataObjects.Net-Extensions-$(VersionNameZip).zip</ZipFile>
  </PropertyGroup>
  <Zip Files="@(Libraries)" ZipFileName="$(ZipFile)" WorkingDirectory="$(BinariesDir)" />
</Target>
-->

<!--
<Target Name="CleanZip">
  <RemoveDir Directories="$(ZipDir)" />
</Target>
-->

<!-- Binaries -->

<Target Name="BuildBinaries" DependsOnTargets="EnsureLocalStorageIntroduced;UpdateProductInfo">
  <MSBuild Projects="@(Projects)" Targets="Build" />
</Target>

<Target Name="CleanBinaries" DependsOnTargets="EnsureLocalStorageIntroduced">
  <MSBuild Projects="@(Projects)" Targets="Clean" />
  <RemoveDir Directories="$(BinariesDir)" />
</Target>

<!-- All-in-one targets  -->

<Target Name="Build" DependsOnTargets="BuildBinaries;BuildPackages" />
<Target Name="Clean" DependsOnTargets="CleanBinaries;CleanPackages" />

<Target Name="Rebuild">
  <CallTarget Targets="Clean" />
  <CallTarget Targets="Build" />
</Target>

</Project>
