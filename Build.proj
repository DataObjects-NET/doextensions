<?xml version="1.0" encoding="utf-8"?>
<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003"
         ToolsVersion="4.0" DefaultTargets="Build">

<Import Project="MSBuild\Tasks.targets" />
<Import Project="Version.props" />

<PropertyGroup>
  <Configuration Condition="'$(Configuration)'==''">Release</Configuration>
</PropertyGroup>

<PropertyGroup>
  <Modifier Condition="'$(Modifier)'=='Final'"></Modifier>
  <VersionName>$(Version)</VersionName>
  <VersionName Condition="'$(Modifier)'!=''">$(Version) $(Modifier)</VersionName>
  <VersionNameNuGet>$(VersionName.Replace(' ', '-'))</VersionNameNuGet>
  <VersionMajor>$([System.Version]::new($(Version)).Major)</VersionMajor>
  <VersionMinor>$([System.Version]::new($(Version)).Minor)</VersionMinor>
  <VersionPatch>$([System.Version]::new($(Version)).Build)</VersionPatch>
</PropertyGroup>

<PropertyGroup>
  <LocalNugetStoragePath>$(DO_PACKAGE_STORE)</LocalNugetStoragePath>
</PropertyGroup>

<PropertyGroup>
  <BuildDir>$(MSBuildProjectDirectory)\_Build\</BuildDir>
  <SourcesDir>$(MSBuildProjectDirectory)\Sources\</SourcesDir>
  <BinariesDir>$(BuildDir)Binaries\$(Configuration)\</BinariesDir>
</PropertyGroup>

<ItemGroup>
  <SpecFiles Include="$(SourcesDir)*\*.nuspec" />
</ItemGroup>

<ItemGroup>
  <Projects Include="$(SourcesDir)Extensions.sln">
    <Properties>Configuration=$(Configuration)</Properties>
  </Projects>
</ItemGroup>

<ItemGroup>
  <ProductVariables Include="Version2">
    <ReplacementValue>$(VersionMajor).$(VersionMinor)</ReplacementValue>
  </ProductVariables>
  <ProductVariables Include="Version3">
    <ReplacementValue>$(VersionMajor).$(VersionMinor).$(VersionPatch)</ReplacementValue>
  </ProductVariables>
  <ProductVariables Include="VersionName">
    <ReplacementValue>$(VersionName)</ReplacementValue>
  </ProductVariables>
</ItemGroup>

<ItemGroup>
  <Distributions Include="Dist\NuGet.All.proj" >
    <Properties>Configuration=$(Configuration)</Properties>
  </Distributions>
</ItemGroup>

<Target Name="InitBuildDir">
  <MakeDir Directories="$(BuildDir)" />
</Target>

<Target Name="UpdateProductInfo" DependsOnTargets="InitBuildDir">
  <PropertyGroup>
    <ProductInfoWorkFile>$(BuildDir)ProductInfo.cs.generated</ProductInfoWorkFile>
    <CompareCommand>fc "$(BuildDir)ProductInfo.cs" "$(ProductInfoWorkFile)" >nul 2>nul</CompareCommand>
  </PropertyGroup>
  <TemplateFile
    Template="$(SourcesDir)ProductInfo.cs"
    OutputFilename="$(ProductInfoWorkFile)"
    Tokens="@(ProductVariables)" />
  <Exec Command="$(CompareCommand)" IgnoreExitCode="true">
    <Output TaskParameter="ExitCode" PropertyName="CompareResult" />
  </Exec>
  <Copy
    Condition="'$(CompareResult)'!='0'"
    SourceFiles="$(ProductInfoWorkFile)"
    DestinationFiles="$(BuildDir)ProductInfo.cs" />
</Target>

<!-- 
  Ensures that local package storage is introduced
-->
<Target Name="EnsureLocalStorageIntroduced">
  <PropertyGroup>
    <LocalNugetStoragePath>$(DO_PACKAGE_STORE)</LocalNugetStoragePath>
    <AddSourceCommand>nuget sources add -Name "LocalNugetStorage" -source "$(LocalNugetStoragePath)"</AddSourceCommand>
  </PropertyGroup>
  
  <Error Condition="'$(LocalNugetStoragePath)'==''" Text = "Local Nuget packages storage is not declared." />
  <Exec Command="$(AddSourceCommand)" IgnoreExitCode="true" />
</Target>

<Target Name="ClearGlobalNuget">
    <PropertyGroup>
    <NuGetGlobalStorage>$(NUGET_PACKAGES)</NuGetGlobalStorage>
	<NuGetGlobalStorage Condition ="'$(NuGetGlobalStorage)'==''">$(RestorePackagesPath)</NuGetGlobalStorage>
	<NuGetGlobalStorage Condition ="'$(NuGetGlobalStorage)'==''">$(USERPROFILE)/.nuget/packages</NuGetGlobalStorage>
	<NugetPackageDir>$(NuGetGlobalStorage)/xtensive.orm.core</NugetPackageDir>
  </PropertyGroup>
  <ItemGroup>
   <FilesToDelete Include="$(NugetPackageDir)\**\*.*" />
  </ItemGroup>
  
  <Delete Files="@(FilesToDelete)" />
  <RemoveDir Directories="$(NugetPackageDir)" />  
</Target>

<!-- Binaries -->

<Target Name="BuildBinaries" DependsOnTargets="EnsureLocalStorageIntroduced;UpdateProductInfo">
  <PropertyGroup>
    <RestoreNoCache>true</RestoreNoCache>
  </PropertyGroup>
  <MSBuild Projects="@(Projects)" Targets="Restore"/>
  <MSBuild Projects="@(Projects)" Targets="Build" />
</Target>

<Target Name="CleanBinaries" DependsOnTargets="EnsureLocalStorageIntroduced">
  <MSBuild Projects="@(Projects)" Targets="Clean" />
  <RemoveDir Directories="$(BinariesDir)" />
</Target>

<!-- Distribution -->
<Target Name="BuildDist"
        DependsOnTargets="UpdateProductInfo;BuildBinaries">
  <MSBuild Projects="@(Distributions)" Targets="Build" />
</Target>

<Target Name="CleanDist" DependsOnTargets="UpdateProductInfo">
  <MSBuild Projects="@(Distributions)" Targets="Clean" />
  <RemoveDir Directories="_Build\Dist\$(Configuration)" />
</Target>

<!-- All-in-one targets  -->

<Target Name="Build" DependsOnTargets="BuildDist" />
<Target Name="Clean" DependsOnTargets="CleanBinaries;CleanDist" />

<Target Name="Rebuild">
  <CallTarget Targets="Clean" />
  <CallTarget Targets="Build" />
</Target>

</Project>
